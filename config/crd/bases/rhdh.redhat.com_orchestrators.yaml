---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: orchestrators.rhdh.redhat.com
spec:
  group: rhdh.redhat.com
  names:
    kind: Orchestrator
    listKind: OrchestratorList
    plural: orchestrators
    singular: orchestrator
  scope: Namespaced
  versions:
  - name: v1alpha2
    served: true
    storage: true
    additionalPrinterColumns:
      - jsonPath: .status.conditions[-1:].status
        name: Ready
        type: string
      - jsonPath: .status.conditions[-1:].reason
        name: Reason
        type: string
    schema:
      openAPIV3Schema:
        description: Orchestrator is the Schema for the orchestrators API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Orchestrator
            type: object
            properties:
              sonataFlowOperator:
                description: SonatafFlowOperator contains the configuration fields for the SonataFlow Operator
                properties:
                  enabled:
                    default: true
                    description: Enabled determines whether to deploy the SonataFlow Operator operator or not. Defaults to true.
                    type: boolean
                  subscription:
                    description: Subscription specifies the subscription attributes to use to deploy the operator.
                    properties:
                      channel:
                        default: alpha
                        description: Channel defines the channel of the operator package to subscribe to
                        type: string
                      installPlanApproval:
                        default: Automatic
                        description: InstallPlanApproval specifies the approval policy for an InstallPlan. It must be one of "Automatic" or "Manual". Defaults to Automatic.
                        type: string
                      name:
                        default: logic-operator-rhel8
                        description: Name defines the name of the operator package
                        type: string
                      namespace:
                        default: openshift-serverless-logic
                        description: Namespace determines the namespace where the operator should be deployed. Defaults to openshift-serverless-logic
                        type: string
                      source:
                        default: "redhat-operators"
                        description: SourceName captures the name of the catalog source
                        type: string
                      startingCSV:
                        default: "logic-operator-rhel8.v1.34.0"
                        description: The initial version of the operator
                        type: string
                    type: object
                type: object
              serverlessOperator:
                description:
                properties:
                  enabled:
                    description: Enabled determines whether the operator should be deployed by the chart. Defaults to true.
                    default: true
                    type: boolean
                  subscription:
                    description: Subscription specifies the subscription attributes to use to deploy the operator.
                    properties:
                      channel:
                        description: Channel defines the channel of the operator package to subscribe to
                        default: stable
                        type: string
                      installPlanApproval:
                        description: InstallPlanApproval specifies the approval policy for an InstallPlan. It must be one of "Automatic" or "Manual". Defaults to Automatic.
                        default: Automatic
                        type: string
                      name:
                        description: Name defines the name of the operator package
                        default: serverless-operator
                        type: string
                      namespace:
                        description: Namespace determines the namespace where the operator should be deployed. Defaults to openshift-serverless
                        default: openshift-serverless
                        type: string
                      source:
                        description: SourceName captures the name of the catalog source
                        default: "redhat-operators"
                        type: string
                    type: object
                type: object
              rhdhOperator:
                description: RHDH Operator contains the configuration fields for the Red Hat Developer Hub operator
                properties:
                  enabled:
                    default: true
                    description: Enabled determines whether the operator should be deployed by the chart. Defaults to true
                    type: boolean
                  targetNamespace:
                    default: orchestrator
                    description: The target namespace for the backstage CR in which RHDH instance is created
                    type: string
                  enableGuestProvider:
                    default: false
                    description: EnableGuestProvider captures whether to enable the guest provider in RHDH. Defaults to false.
                    type: boolean
                  catalogBranch:
                    default: "v1.4.x"
                    description: CatalogBranch captures the catalog branch value. Defaults to "v1.4.x".
                    type: string
                  secretRef:
                    description: Backstage secret reference information
                    properties:
                      name:
                        description: Name of the secret that contains the credentials for the plugin to establish a communication channel with the Kubernetes API, ArgoCD, GitHub servers and SMTP mail server.
                        default: backstage-backend-auth-secret
                        type: string
                      backstage:
                        description: Backstage specific configuration fields that contain the Backstate confidential keys.
                        properties:
                          backendSecret:
                            default: BACKEND_SECRET
                            description: Key in the secret with name defined in the 'name' field that contains the value of the Backstage backend secret. Defaults to 'BACKEND_SECRET'. It's required.
                            type: string
                        type: object
                      github:
                        description: GitHub specific configuration fields that are injected to the backstage instance to allow the plugin to communicate with GitHub.
                        properties:
                          token:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the authentication token as expected by GitHub. Required for importing resource to the catalog, launching software templates and more. Defaults to 'GITHUB_TOKEN', empty for not available.
                            default: GITHUB_TOKEN
                            type: string
                          clientId:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the client ID that you generated on GitHub, for GitHub authentication (requires GitHub App). Defaults to 'GITHUB_CLIENT_ID', empty for not available.
                            default: GITHUB_CLIENT_ID
                            type: string
                          clientSecret:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the client secret tied to the generated client ID. Defaults to 'GITHUB_CLIENT_SECRET', empty for not available.
                            default: GITHUB_CLIENT_SECRET
                            type: string
                        type: object
                      gitlab:
                        description: Gitlab specific configuration fields that are injected to the Backstage instance to allow the plugin to communicate with Gitlab.
                        properties:
                          token:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the authentication token as expected by Gitlab. Required for importing resource to the catalog, launching software templates and more. Defaults to 'GITLAB_TOKEN', empty for not available.
                            default: GITLAB_TOKEN
                            type: string
                          host:
                            description: The name of the host for the Gitlab instance used. Required for launching software templates. Defaults to 'GITLAB_HOST', empty for not available.
                            default: GITLAB_HOST
                            type: string
                        type: object
                      k8s:
                        description: Kubernetes specific configuration fields that are injected to the Backstage instance to allow the plugin to communicate with the Kubernetes API Server.
                        properties:
                          clusterToken:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the API URL of the kubernetes cluster. Defaults to 'K8S_CLUSTER_TOKEN', empty for not available.
                            type: string
                            default: K8S_CLUSTER_TOKEN
                          clusterUrl:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the Kubernetes API bearer token used for authentication. Defaults to 'K8S_CLUSTER_URL', empty for not available.
                            type: string
                            default: K8S_CLUSTER_URL
                        type: object
                      argocd:
                        description: ArgoCD specific configuration fields that are injected to the Backstage instance to allow the plugin to communicate with ArgoCD. Note that ArgoCD must be deployed beforehand and the argocd.enabled field must be set to true as well.
                        type: object
                        properties:
                          url:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the URL of the ArgoCD API server. Defaults to 'ARGOCD_URL', empty for not available.
                            type: string
                            default: ARGOCD_URL
                          username:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the username to login to ArgoCD. Defaults to 'ARGOCD_USERNAME', empty for not available.
                            type: string
                            default: ARGOCD_USERNAME
                          password:
                            description: Key in the secret with name  defined in the 'name' field that contains the value of the password to authenticate to ArgoCD. Defaults to 'ARGOCD_PASSWORD', empty for not available.
                            type: string
                            default: ARGOCD_PASSWORD
                      notificationsEmail:
                        description: Notifications Email backstage plugin specific configuration fields that are injected to the backstage instance.
                        type: object
                        properties:
                          hostname:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the hostname of the SMTP server for the notifications plugin. Defaults to 'NOTIFICATIONS_EMAIL_HOSTNAME', empty for not available.
                            type: string
                            default: NOTIFICATIONS_EMAIL_HOSTNAME
                          username:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the username of the SMTP server for the notifications plugin. Defaults to 'NOTIFICATIONS_EMAIL_USERNAME', empty for not available.
                            type: string
                            default: NOTIFICATIONS_EMAIL_USERNAME
                          password:
                            description: Key in the secret with name defined in the 'name' field that contains the value of the password of the SMTP server for the notifications plugin. Defaults to 'NOTIFICATIONS_EMAIL_PASSWORD', empty for not available.
                            type: string
                            default: NOTIFICATIONS_EMAIL_PASSWORD
                    type: object
                  subscription:
                    description: Subscription specifies the subscription attributes to use to deploy the operator.
                    properties:
                      channel:
                        default: fast-1.4
                        description: Channel defines the channel of the operator package to subscribe to
                        type: string
                      installPlanApproval:
                        default: Automatic
                        description: InstallPlanApproval specifies the approval policy
                          for an InstallPlan. It must be one of "Automatic" or "Manual".
                          Defaults to Automatic.
                        type: string
                      name:
                        default: rhdh
                        description: Name defines the name of the operator package
                        type: string
                      namespace:
                        default: rhdh-operator
                        description: Namespace determines the namespace where the operator should be deployed. Defaults to rhdh-operator
                        type: string
                      source:
                        default: "redhat-operators"
                        description: Source captures the name of the catalog source
                        type: string
                      startingCSV:
                        default: ""
                        description: The initial version of the operator
                        type: string
                    type: object
                type: object
              rhdhPlugins:
                description: Backstage plugins
                properties:
                  npmRegistry:
                    description: NPM registry is defined already in the container, but sometimes the registry need to be modified to use different versions of the plugin, for example staging (https://npm.stage.registry.redhat.com) or development repositories
                    default: "https://npm.registry.redhat.com"
                    type: string
                  scope:
                    description: Scope of the plugins
                    default: "https://github.com/rhdhorchestrator/orchestrator-plugins-internal-release/releases/download/1.4.0-rc.4"
                    type: string
                  orchestrator:
                    description: Orchestrator plugin information
                    properties:
                      package:
                        description: Package name
                        default: backstage-plugin-orchestrator-1.4.0-rc.4.tgz
                        type: string
                      integrity:
                        description: Package SHA integrity
                        default: sha512-2Dp6E1i5bAfUnbUctmYnJGE9su5PgHWhFsOXvDYHYzccIy4fMlSrEkvIjrX8KXu+9PSM+FnYAZZ/13zNcsM+Og==
                        type: string
                    type: object
                  orchestratorBackend:
                    description: Orchestrator backend plugin information
                    properties:
                      package:
                        description: Package name
                        type: string
                        default: backstage-plugin-orchestrator-backend-dynamic-1.4.0-rc.4.tgz
                      integrity:
                        description: Package SHA integrity
                        type: string
                        default: sha512-h3RNs965QFn/ldoBIKGKNP3Mb4i25uWn4bFUXLZ5f+XVxFmZ/9yf7Ue8sGQOXC5GyxRb8W9cA0zae48E9YCcyQ==
                    type: object
                  notificationsEmail:
                    description: Notification email plugin information
                    properties:
                      enabled:
                        description: whether to install the notifications email plugin. requires setting of hostname and credentials in backstage secret to enable. See value backstage-backend-auth-secret. See plugin configuration at https://github.com/backstage/backstage/blob/master/plugins/notifications-backend-module-email/config.d.ts
                        type: boolean
                        default: false
                      port:
                        description: SMTP server port
                        type: integer
                        default: 587
                      sender:
                        description: The email sender address
                        type: string
                        default: ""
                      replyTo:
                        description: Reply-to address
                        type: string
                        default: ""
                    type: object
                type: object
              postgres:
                description: Sonataflow operator PostgreSQL configuration details
                properties:
                  serviceName:
                    description: The name of the Postgres DB service to be used by platform services. Cannot be empty.
                    default: sonataflow-psql-postgresql
                    type: string
                  serviceNamespace:
                    description: The namespace of the Postgres DB service to be used by platform services.
                    default: sonataflow-infra
                    type: string
                  authSecret:
                    description: PostgreSQL connection credentials details
                    properties:
                      name:
                        description: Name of existing secret to use for PostgreSQL credentials.
                        default: sonataflow-psql-postgresql
                        type: string
                      userKey:
                        description: Name of key in existing secret to use for PostgreSQL credentials.
                        default: postgres-username
                        type: string
                      passwordKey:
                        description: name of key in existing secret to use for PostgreSQL credentials.
                        default: postgres-password
                        type: string
                    type: object
                  database:
                    description: Existing database instance used by data index and job service
                    default: sonataflow
                    type: string
                type: object
              orchestrator:
                description: Orchestrator contains the fields for the orchestrator configuration
                properties:
                  namespace:
                    description: Namespace where sonataflow's workflows run. The value is captured when running the setup.sh script and stored as a label in the target namespace. User can override the value by populating this field. Defaults to `sonataflow-infra`. This field takes precendence over the value in the label.
                    type: string
                    default: sonataflow-infra
                  sonataflowPlatform:
                    description: SonataflowPlatform contains the pod resource configuration to be used for the data index and job services
                    properties:
                      monitoring:
                        description: Contains the monitoring configuration fields
                        properties:
                          enabled:
                            description: Enabled determines whether monitoring should be enabled. Defaults to true.
                            default: true
                            type: boolean
                        type: object
                      resources:
                        description: Resources contains the requests and limit of CPU and memory resources for the pod instance
                        type: object
                        properties:
                          limits:
                            description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            properties:
                              cpu:
                                description: CPU defines the CPU resource limits
                                default: 500m
                                type: string
                              memory:
                                description: Memory defines the memory resource limits
                                default: 1Gi
                                type: string
                            type: object
                          requests:
                            description: |
                              Requests describes the minimum amount of compute resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            properties:
                              cpu:
                                description: CPU defines the CPU resource limits
                                default: 250m
                                type: string
                              memory:
                                description: Memory defines the memory resource limits
                                default: 64Mi
                                type: string
                            type: object
                    type: object
                type: object
              tekton:
                description: Contains the tekton configuration fields
                properties:
                  enabled:
                    description: Enabled determines whether to create the Tekton pipeline resources. Defaults to false.
                    default: false
                    type: boolean
                type: object
              argocd:
                description: ArgoCD contains the fields for the ArgoCD configuration
                properties:
                  enabled:
                    description: Enabled determines whether to install the ArgoCD plugin and create the orchestrator AppProject
                    type: boolean
                    default: false
                  namespace:
                    description: Namespace defines the namespace where ther ArgoCD operator is deployed and is watching for argoapp CR instances
                    type: string
                    default: orchestrator-gitops
                type: object
              networkPolicy:
                description: NetworkPolicy contains the namespace of an existing RHDH instance
                properties:
                  rhdhNamespace:
                    description: Namespace of the existing RHDH instance.
                    type: string
                    default: ""
                type: object
          status:
            description: Status defines the observed state of Orchestrator
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    subresources:
      status: {}
