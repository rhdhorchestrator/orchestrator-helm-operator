{{- define "sonataFlowClusterPlatform-manifest" }}
{{- $workflowNamespace := include "get-workflow-namespace" . }}
---
apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowClusterPlatform
metadata:
  name: cluster-platform
  annotations:
    "meta.helm.sh/release-name": {{ .Release.Name}}
spec:
  platformRef:
    name: sonataflow-platform
    namespace: {{ $workflowNamespace }}
{{- end }}
{{- define "sonataFlowPlatform-manifest" }}
{{- $workflowNamespace := include "get-workflow-namespace" . }}
---
apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowPlatform
metadata:
  name: sonataflow-platform
  namespace: {{ $workflowNamespace }}
  annotations:
    "meta.helm.sh/release-name": {{ .Release.Name}}
spec:
  monitoring:
    enabled: {{ .Values.orchestrator.sonataflowPlatform.monitoring.enabled }}
  build:
    template:
      resources:
        requests:
          memory: {{ .Values.orchestrator.sonataflowPlatform.resources.requests.memory }}
          cpu: {{ .Values.orchestrator.sonataflowPlatform.resources.requests.cpu }}
        limits:
          memory: {{ .Values.orchestrator.sonataflowPlatform.resources.limits.memory }}
          cpu: {{ .Values.orchestrator.sonataflowPlatform.resources.limits.cpu }}
  {{- if (and (.Values.orchestrator.sonataflowPlatform.eventing.broker.name) (.Values.orchestrator.sonataflowPlatform.eventing.broker.namespace)) }}
  eventing:
    broker:
      ref:
        apiVersion: eventing.knative.dev/v1
        kind: Broker
        name: {{ .Values.orchestrator.sonataflowPlatform.eventing.broker.name }}
        namespace: {{ .Values.orchestrator.sonataflowPlatform.eventing.broker.namespace }}
  {{- end }}
  services:
    dataIndex:
      enabled: true
      persistence:
        postgresql:
          secretRef:
            name: {{ .Values.postgres.authSecret.name }}
            userKey: {{ .Values.postgres.authSecret.userKey }}
            passwordKey: {{ .Values.postgres.authSecret.passwordKey }}
          serviceRef:
            name: {{ .Values.postgres.serviceName }}
            namespace: {{ .Values.postgres.serviceNamespace }}
    jobService:
      enabled: true
      persistence:
        postgresql:
          secretRef:
            name: {{ .Values.postgres.authSecret.name }}
            userKey: {{ .Values.postgres.authSecret.userKey }}
            passwordKey: {{ .Values.postgres.authSecret.passwordKey }}
          serviceRef:
            name: {{ .Values.postgres.serviceName }}
            namespace: {{ .Values.postgres.serviceNamespace }}
{{- end }}
{{- $workflowNamespace := include "get-workflow-namespace" . }}
## Manifests
{{ include "manage-cr-lifecycle-on-action" (dict "release" .Release "apiGroup" "sonataflow.org" "groupVersion" "v1alpha08" "kind" "SonataFlowClusterPlatform" "kinds" "sonataflowclusterplatforms" "resourceName" "cluster-platform" "isEnabled" .Values.sonataFlowOperator.enabled "hasCRDInstalled" (.Capabilities.APIVersions.Has "sonataflow.org/v1alpha08/SonataFlowClusterPlatform") "manifest" (include "sonataFlowClusterPlatform-manifest" . | b64enc )) }}
{{ include "manage-cr-lifecycle-on-action" (dict "release" .Release "apiGroup" "sonataflow.org" "groupVersion" "v1alpha08" "kind" "SonataFlowPlatform" "kinds" "sonataflowplatforms" "targetNamespace" $workflowNamespace "resourceName" "sonataflow-platform" "isEnabled" .Values.sonataFlowOperator.enabled "hasCRDInstalled" (.Capabilities.APIVersions.Has "sonataflow.org/v1alpha08/SonataFlowClusterPlatform") "manifest" (include "sonataFlowPlatform-manifest" . | b64enc )) }}